// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.SqlEfCore;

#nullable disable

namespace Persistence.SqlEfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251020203441_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("Domain.Models.RegularUrl", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUrlString")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlString")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedUrlString")
                        .IsUnique();

                    b.ToTable("RegularUrls");
                });

            modelBuilder.Entity("Domain.Models.ShortUrl", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BLOB");

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<long>("ClickCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastClickedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedAlias")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RegularUrlId")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("ShortUrlCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedAlias")
                        .IsUnique()
                        .HasFilter("\"NormalizedAlias\" IS NOT NULL");

                    b.HasIndex("RegularUrlId");

                    b.ToTable("ShortUrls");
                });

            modelBuilder.Entity("Domain.Models.ShortUrl", b =>
                {
                    b.HasOne("Domain.Models.RegularUrl", null)
                        .WithMany()
                        .HasForeignKey("RegularUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
